version: '3.9'

services:
  db:
    image: postgres:15
    restart: unless-stopped
    volumes:
      - postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_DB: ${SLM_DB_NAME:-slm}
      POSTGRES_USER: ${SLM_DB_USER:-slm_user}
      POSTGRES_PASSWORD: ${SLM_DB_PASSWORD:-slm_password}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${SLM_DB_USER:-slm_user} -d ${SLM_DB_NAME:-slm} && psql -U ${SLM_DB_USER:-slm_user} -d ${SLM_DB_NAME:-slm} -c 'SELECT 1'"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s
    networks:
      - slm-network

  web:
    build: 
      context: ..
      dockerfile: deploy/Dockerfile
    command: ["uv", "run", "gunicorn", "slm.wsgi:application", "--bind", "0.0.0.0:8000", "--workers", "4", "--timeout", "120"]
    volumes:
      - static_volume:/slm/site/static
      - media_volume:/slm/site/media
    env_file:
      - .env
    environment:
      - DJANGO_SETTINGS_MODULE=slm.settings.root
    depends_on:
      db:
        condition: service_healthy
    restart: unless-stopped
    networks:
      - slm-network

  nginx:
    image: nginx:1.25-alpine
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - static_volume:/slm/site/static:ro
      - media_volume:/slm/site/media:ro
      - ./certs:/etc/ssl/certs:ro
    depends_on:
      - web
    networks:
      - slm-network

volumes:
  postgres_data:
    driver: local
  static_volume:
    driver: local
  media_volume:
    driver: local
  upload_volume:
    driver: local

networks:
  slm-network:
    driver: bridge
