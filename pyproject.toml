[tool.poetry]
name = "igs-slm"
version = "0.1.0b"
description = "IGS Site Log Manager"
authors = [
    "Ashley Santiago <ashley.k.santiago@jpl.nasa.gov>",
    "Brian Kohan <bkohan@jpl.nasa.gov>"
]
license = "MIT"
repository = "https://github.com/International-GNSS-Service/SLM"
homepage = "https://igs-slm.readthedocs.io"
readme = "README.md"
keywords = [
    "SLM",
    "Site Log Manager",
    "IGS",
    "International GNSS Service",
    "GNSS",
    "GPS",
    "GLONASS",
    "Galileo",
    "BeiDou",
    "QZSS"
]
classifiers = [
    "Environment :: Web Environment",
    "Framework :: Django",
    "Operating System :: OS Independent",
    "Topic :: Software Development :: Libraries :: Python Modules",
    "Development Status :: 5 - Production/Stable",
    "Framework :: Django :: 4.2",
    "Framework :: Django :: 5.0",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Natural Language :: English",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Topic :: Internet :: WWW/HTTP",
    "Topic :: Internet :: WWW/HTTP :: Site Management",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules"
]
packages = [
    { include = "slm" },
    { include = 'igs_tools' }
]
exclude = ["slm/tests"]

[tool.poetry.scripts]
slm-startproject = 'slm.bin.startproject:app'

[tool.poetry.dependencies]
python = "^3.8"
Django = ">=4.2.0,<6.0.0"
django-split-settings = "^1.2.0"
importlib-resources = ">1.3.0"
django-allauth = "^0.63.3"
django-widget-tweaks = "^1.4.12"
djangorestframework = "^3.15.2"
django-render-static = "^3.1.0"
django-compressor = "^4.0"
django-filter = "^24.2"
python-dateutil = "^2.8.2"
django-ipware = "^7.0.1"
django-enum = "^1.2.2"
enum-properties = "^1.7.0"
tqdm = "^4.64.1"
geojson = "^3.1.0"
Pillow = "^10.0.0"
polyline = "^2.0.0"
lxml = "^5.2.1"
django-polymorphic = "^3.1.0"
Jinja2 = "^3.1.2"
django-ckeditor = "^6.5.1"
django-crispy-forms = "^2.0"
crispy-bootstrap5 = "^2024.2"
djangorestframework-gis = "^1.0"
numpy = [
    { version = ">=1.26", markers = "python_version > '3.8'" },
    { version = "<=1.24", markers = "python_version <= '3.8'" },
]
chardet = "^5.1.0"
psycopg = {extras = ["binary"], version = "^3.1.12"}
django-typer = "^2.1.2"
django-routines = "^1.1.3"
rich = "^13.7.1"
requests = "^2.32.3"

[tool.poetry.group.dev.dependencies]
django-extensions = "^3.1.5"
pydot = "^2.0.0"
pyparsing = "^3.0.6"
ipython = "8.12.3"
pytest = "^8.1.1"
pytest-django = "^4.5.2"
Sphinx = [
    { version = "^7.2.0", markers = "python_version > '3.8'" },
    { version = "^7.0.0", markers = "python_version <= '3.8'" },
]
sphinxcontrib-typer = {extras = ["html", "pdf", "png"], version = "^0.3.3", markers="python_version >= '3.9'"}
sphinx-tabs = "^3.4.5"
sphinx-rtd-theme = "^2.0.0"
coverage = "^7.2.1"
readme-renderer = {extras = ["md"], version = "^43.0"}
safety = "^3.1.0"
pytest-cov = "^5.0.0"
django-test-migrations = "^1.2.0"
doc8 = "^1.1.1"
django-debug-toolbar = "^4.1.0"
pygount = "^1.4.0"
ruff = "^0.4.1"
poetry-plugin-export = "^1.8.0"


[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"


# todo doc8 configuration here is not being picked up and doesnt seem to be working
# as expected - for now pass these parameters manually
[tool.doc8]
max-line-length = 100
sphinx = true

[tool.isort]
profile = "black"


[tool.pytest.ini_options]
# py.test options:
DJANGO_SETTINGS_MODULE = "slm.tests.settings"
python_files = "tests.py"
norecursedirs = "*.egg .eggs dist build docs .tox .git __pycache__"
env = [
    "TERMINAL_WIDTH=80",
]

addopts = [
  "--strict-markers",
  "--cov=slm",
  "--cov-branch",
  "--cov-report=term-missing:skip-covered"
]

[tool.coverage.run]
omit = [
  "slm/tests/**/*.py"
]
branch = true
source = ["slm"]
concurrency = ["multiprocessing"]
parallel = true
relative_files = true
command_line = "-m pytest --cov=slm"

[tool.coverage.paths]
source = [
    "slm"
]


[tool.black]
target-version = ["py38", "py39", "py310", "py311", "py312"]
include = '\.pyi?$'

[tool.ruff]
line-length = 88
exclude = [
    "doc",
    "dist",
    "igs_tools",
    "slm/tests",
    "slm/bin/templates"
]

