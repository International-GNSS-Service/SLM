name: Test

permissions:
  contents: read
  
on:
  push:
  pull_request:
  workflow_call:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Open ssh debug session.'
        required: true
        default: false
        type: boolean
  schedule:
    - cron: '0 13 * * *'  # Runs at 6 am pacific every day

jobs:
  test:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      actions: write
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12', '3.13']
        django-version:
          - '4.2' # LTS April 2026

    env:
      POSTGRES_DB: slm_test
      POSTGRES_USER: slm
      POSTGRES_PASSWORD: slm!test
      POSTGRES_HOST: localhost
      POSTGRES_PORT: 5432
      COVERAGE_FILE: linux-py${{ matrix.python-version }}-dj${{ matrix.django-version }}.coverage
      
    services:
      postgres:
        image: postgis/postgis:16-3.4
        env:
          POSTGRES_DB: slm_test
          POSTGRES_USER: slm
          POSTGRES_PASSWORD: slm!test
          POSTGRES_HOST: localhost
        ports:
          - 5432:5432
        # Options to set health checks
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        
    steps:
      - name: Install Emacs
        if: ${{ github.event.inputs.debug == 'true' }}
        run: |
          sudo apt install emacs
      - name: Setup tmate session
        if: ${{ github.event.inputs.debug == 'true' }}
        uses: mxschmitt/action-tmate@v3.22
        with:
          detached: true
        timeout-minutes: 60
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        id: sp
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Install Just
        uses: extractions/setup-just@v3
      - name: Install GIS Libs
        run: |
          sudo apt-get update
          sudo apt install gdal-bin
      - name: Install Dependencies
        run: |
          just setup ${{ steps.sp.outputs.python-path }}
          just test-lock Django~=${{ matrix.django-version }}.0
          just install
      - name: Run Unit Tests
        run: |
          just test-all
      - name: Store coverage files
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.COVERAGE_FILE }}
          path: ${{ env.COVERAGE_FILE }}


  coverage-combine:
    needs: [test]
    runs-on: ubuntu-latest
    permissions:
      contents: read
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        id: sp
        with:
          python-version: '3.12'
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Setup Just
        uses: extractions/setup-just@v3
      - name: Install Release Dependencies
        run: |
          just setup ${{ steps.sp.outputs.python-path }}
          just install

      - name: Get coverage files
        uses: actions/download-artifact@v4
        with:
          pattern: "*.coverage"
          merge-multiple: true
      - run: ls -la *.coverage
      - run: just coverage

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files:
            ./coverage.xml
