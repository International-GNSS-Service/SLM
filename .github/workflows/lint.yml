name: lint

on:
  push:
  pull_request:
  workflow_dispatch:
    inputs:
      debug:
        description: 'Set to on, to open ssh debug session.'
        required: true
        default: 'off'

jobs:

  linting:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        # run static analysis on bleeding and trailing edges
        python-version: [ '3.8', '3.12' ]
        django-version:
          - '4.2' # LTS April 2026
          - '5.0' # April 2025
        exclude:
          - python-version: '3.12'
            django-version: '4.2'
          - python-version: '3.8'
            django-version: '5.0'

    steps:
      - name: Setup tmate session
        if: ${{ github.event.inputs.debug == 'on' }}
        uses: mxschmitt/action-tmate@v3
        with:
          detached: true
        timeout-minutes: 60
      - uses: actions/checkout@v4
      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        uses: snok/install-poetry@v1
        with:
          virtualenvs-create: true
          virtualenvs-in-project: true
      - name: Install GIS Libs
        run: |
          sudo apt install gdal-bin
      - name: Install Dependencies
        run: |
          poetry config virtualenvs.in-project true
          poetry run pip install --upgrade pip
          poetry install
          poetry run pip install -U "django~=${{ matrix.django-version }}"
      - name: Run Static Analysis
        run: |
          poetry run ruff format slm
          poetry run ruff check --fix --select I slm
          poetry run ruff check slm
          poetry check
          poetry run pip check
          poetry run safety check --full-report
          poetry run python -m readme_renderer ./README.md
          cd ./doc
          poetry run doc8 --ignore-path build --max-line-length 100
          poetry run make html
